13. 함수표현식
-표현식문 vs 실행문
- 다중 패러다임
-고차함수 / 클로저

14.기타 함수 기능
-매개변수를 활용한 구조분해할당 타입정의
- 함수를 활용한 객체 생성법
- class를 생성할 때, 내부 메서드함수에서 this 객체 사용

15.배열 / 튜플
-자료구조에 대한 개념
(같은 결과를 만들어 내는데, 
명령형 방식(하이레벨) vs {선언형 방식 = 함수형 방식(로우레벨)})

배열의 기본타입정의
-배열 내 객체 아이템 존재 시, 타입정의방법 (interface)
-반복문 사용 시, 타입정의방법
for, for in, for of

-제네릭 타입
-전개 연산자 사용시, 배열타입정의

16.배열을 활용한 선언형 vs 명령형 코드구현방식 (자료구조에 대한 이해)
1) 선언형 =함수형 : 하이레벨(보다 고급 코딩방법)
>배열안에 있는 값을 찾아서 알아서 더해라!!기능을 갖고 있는 함수 및 반복문
>초심자들에게는 명령형 코드를 입력하는것이 편리함
>커스터마이징

2) 명령형 : 로우레벨 => 그동안 배운 방식
>처음 접하게 되면, 오히려 어려움/ 번거로움
>코드의 실행단계를 분리시켜놓았기 때문에 커스터마이징 가능
>맞춤형 코드 작성, 개발 가능
